- @reader_session ||= ReaderSession.new
- no_title ||= false
- purpose ||= false

.login_form
  - cssclass = "compact friendly"
  - cssclass << " inline" if @inline
  - form_for @reader_session, :url => reader_session_path, :html => {:class => cssclass} do |f|
    %input{:type => :hidden, :name => :authentication_type, :value => :session}
    
    - unless no_title
      %h2
        - if purpose
          = purpose + ','
          = t('reader_extension.please')
        - else
          = t('reader_extension.please').titlecase
        = t('reader_extension.log_in')
        - if Radiant::Config['reader.allow_registration?']
          = t('or')
          = link_to t('reader_extension.register'), new_reader_url

    - if @error
      %p.haserror
        = t('reader_extension.login_unknown')
        %br
        = link_to t('reader_extension.forgotten_password'), new_password_reset_url

    %p{ :class => @reader_session.errors.on(:email) ? 'haserror' : '' }
      %label{:for => "reader_session_email"}
        = t('reader_extension.nickname_or_email')
      %br
      = f.text_field :email, :class => 'login' 
        
    %p{ :class => @reader_session.errors.on(:password) ? 'haserror' : '' }
      %label{:for => "reader_session_password"}
        = t('reader_extension.password').titlecase
      %br
      = f.password_field :password, :class => 'login'

    %p.buttons
      = f.submit t("reader_extension.navigation.log_in")
      = f.check_box :remember_me
      %label.paranthetical{:for => "reader_session_remember_me"}
        = t('reader_extension.remember_me')

  %ul
    - if Radiant::Config['reader.allow_registration?']
      %li
        = link_to t("reader_extension.navigation.registration").titlecase, new_reader_url
        = t('reader_extension.is_free_and_quick')
    %li
      = link_to t("reader_extension.forgotten_password"), new_password_reset_url
      
